# -*- coding: utf-8 -*-
"""PracticaTransformersMiniDungeonAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m3InuvjWcRruHF7SGo729UAcLkiZeBVn

# **1. Instalacion y configuracion de bibliotecas**
"""

!pip install transformers -q

from transformers import pipeline, set_seed
import re

"""# **2. Carga del modelo preentrenado**"""

# Configuración inicial
modelo = "EleutherAI/gpt-neo-1.3B"  # Modelo robusto
print(f"Cargando el modelo '{modelo}'...")
generator = pipeline('text-generation', model=modelo)
set_seed(42)

"""# **3. Parametros para la generacion**"""

# Parámetros de generación
temperatura = 0.01  # Reducir temperatura para mayor coherencia
top_p = 0.9
top_k = 50
max_length = 400
no_repeat_ngram_size = 2  # Evitar repeticiones de n-gramas

"""# **4. Input de texto**"""

# Función para generar el texto a partir del input
def generar_historia_iterativa(entrada_usuario, max_steps=3):
    texto_generado = entrada_usuario
    for i in range(max_steps):
        resultado = generator(
            texto_generado,
            max_length=len(texto_generado.split()) + 100,  # Expandir solo un poco más
            num_return_sequences=1,
            temperature=temperatura,
            top_k=top_k,
            top_p=top_p,
            no_repeat_ngram_size=no_repeat_ngram_size
        )
        texto_generado = resultado[0]['generated_text']
        # Mantener solo la parte nueva generada
        texto_generado = texto_generado.strip()
    return texto_generado

# Entrada del usuario
entrada_usuario = input("Escribe el inicio de tu historia (por ejemplo: 'Había una vez un caballero'): ").strip()
while not entrada_usuario:
    entrada_usuario = input("Por favor, escribe un texto válido: ").strip()

"""# **5.Generacion de texto**"""

#entrada_usuario = f"Escribe una historia en español: {entrada_usuario}"

# Generación del texto
texto_generado = generar_historia_iterativa(entrada_usuario)
print("\nTexto generado (sin post-procesamiento):")
print(texto_generado)

"""# **6. Post-procesamiento**"""

def post_procesar_texto(texto):
    """Post-procesamiento para evitar repeticiones, cambiar caracteres y mejorar la coherencia."""
    # Eliminar espacios innecesarios
    texto = re.sub(r'\s+', ' ', texto)
    # Eliminar puntos extra
    texto = re.sub(r'\.\.+', '.', texto)
    # Eliminar caracteres no deseados (cualquier idioma no relacionado con español)
    texto = re.sub(r'[^\w\s.,!?áéíóúÁÉÍÓÚñÑ]', '', texto)  # Eliminar caracteres extraños
    return texto.strip()

# Eliminar el texto no deseado y aplicar post-procesamiento
texto_final = post_procesar_texto(texto_generado)

# Mostrar el texto final después del post-procesamiento
print("\nTexto final después del post-procesamiento:")
print(texto_final)